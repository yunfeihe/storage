{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1532070312000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1532070312000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1532070312000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1532070312000},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1532070312000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1532070312000},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1532070312000},{"_id":"themes/next/bower.json","hash":"a8c832da6aad5245052aed7ff26c246f85d68c6c","modified":1532070312000},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1532070312000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1532070312000},{"_id":"themes/next/_config.yml","hash":"b29ef3bef05871d52b021d58aeaad51a8ecbb421","modified":1532170589026},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1532070312000},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1532070312000},{"_id":"themes/next/package.json","hash":"11a0b27f92da8abf1efbea6e7a0af4271d7bff9e","modified":1532070312000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1532070312000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1532070312000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"f846118d7fc68c053df47b24e1f661241645373f","modified":1532070312000},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1532070312000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1532070312000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1532070312000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1532070312000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1532070312000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1532070312000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1532070312000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1532070312000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1532070312000},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1532070312000},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1532070312000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1532070312000},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1532070312000},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1532070312000},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1532070312000},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1532070312000},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1532070312000},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1532070312000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1532070312000},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1532070312000},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1532070312000},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1532070312000},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1532070312000},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1532070312000},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1532070312000},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1532070312000},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1532070312000},{"_id":"themes/next/languages/ja.yml","hash":"5f8e54c666393d1ca2e257f6b1e3b4116f6657d8","modified":1532070312000},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1532070312000},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1532070312000},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1532070312000},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1532070312000},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1532070312000},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1532070312000},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1532070312000},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1532070312000},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1532070312000},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1532070312000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1532070312000},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1532070312000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1532070312000},{"_id":"source/_posts/csapp读后小记.md","hash":"ebf91cb77ff92b215fcf62d71e433604df51a304","modified":1540644936746},{"_id":"source/_posts/《javascript高级程序设计》阅读笔记.md","hash":"f8935321bd9902321ed3d70e6be29324f39a702a","modified":1537431575634},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1532070312000},{"_id":"source/_posts/变长文字及输入框的居中对其方法.md","hash":"b7d18c56054661797cc6dde8ab437af8965bede5","modified":1537432155754},{"_id":"source/_posts/什么他妈的叫他妈的async和await关键字.md","hash":"04a23d929e94a2a429f04c56456e04023a0e77b8","modified":1539863324237},{"_id":"source/_posts/实验室学习路线beta版.md","hash":"653e873a641494968e8b04fb7cad2eb0c9c9594e","modified":1539480558539},{"_id":"source/categories/index.md","hash":"a04d07b838335b0e1a51f1633d53f6661d311ff4","modified":1532171353695},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1532070312000},{"_id":"source/tags/index.md","hash":"0ab8063fe3b10c97a38f202b786451f8dab7317e","modified":1532171373308},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"source/_posts/foo.md","hash":"9a08826618d88ecc120a7610d5390b131a196120","modified":1539217660414},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1532070312000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1532070312000},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1532070312000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1532070312000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1532070312000},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"44e4fb7ce2eca20dfa98cdd1700b50d6def4086f","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1532070312000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1532070312000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1532070312000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1532070312000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1532070312000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1532070312000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"cf8fe76993b513b97f379832222b6ec7e41a1c15","modified":1532070312000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1532070312000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"d64a38577dd2cf3c9a56c5b28d479fb315918ad1","modified":1532070312000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1532070312000},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1532070312000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1532070312000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1532070312000},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1532070312000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1532070312000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1532070312000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1532070312000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1532070312000},{"_id":"themes/next/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1532070312000},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1532070312000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1532070312000},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1532070312000},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1532070312000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1532070312000},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1532070312000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1532070312000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1532070312000},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1532070312000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1532070312000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1532070312000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1d59b968af4b8d147f8bc9bc295d596e41be8348","modified":1532070312000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"545102e3aa3ce494f7046abf71cefb7aaf671559","modified":1532070312000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1532070312000},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1532070312000},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1532070312000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1532070312000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1532070312000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1532070312000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1532070312000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1532070312000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1532070312000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1532070312000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1532070312000},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1532070312000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1532070312000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1532070312000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1532070312000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1532070312000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1532070312000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1532070312000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1532070312000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1532070312000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1532070312000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1532070312000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1532070312000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1532070312000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1532070312000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1532070312000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1532070312000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1532070312000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1532070312000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1532070312000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1532070312000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1532070312000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1532070312000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1532070312000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1532070312000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1532070312000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1532070312000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1532070312000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1532070312000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1532070312000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1532070312000},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1532070312000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1532070312000},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"43f70cdc999c66b9c7889a13150ec63e99b1fdd0","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1532070312000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"8f1415d4013baa064136bf20420a326c20a9d8dd","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"88b5a808b6b254c6122444e9dc180d5cc459cb19","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"73723630eee3988127f9b9e06fd234b276e4f458","modified":1532070312000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1532070312000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1532070312000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1532070312000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1532070312000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1532070312000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1532070312000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1532070312000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1532070312000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1532070312000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1532070312000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1532070312000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1532070312000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1532070312000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1532070312000},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1532070312000},{"_id":"themes/next/source/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1532070312000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1532070312000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1532070312000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1532070312000},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1532070312000},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1532070312000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1532070312000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1532070312000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1532070312000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1532070312000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1532070312000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1532070312000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1532070312000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1532070312000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1532070312000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1532070312000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1532070312000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1532070312000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1532070312000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"bbe0d111f6451fc04e52719fd538bd0753ec17f9","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1532070312000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1532070312000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1532070312000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1532070312000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1532070312000},{"_id":"public/categories/index.html","hash":"6be7ff5e4baac1e30ec1c1fb703083dc2599754a","modified":1540644943666},{"_id":"public/tags/index.html","hash":"0b716d5a018e93270656303ae4b4fcc7c62cb067","modified":1540644943666},{"_id":"public/2018/10/27/csapp读后小记/index.html","hash":"0aa59e5257f4723333376dc3e9025a578cf2f7ba","modified":1540644943668},{"_id":"public/2018/10/18/什么他妈的叫他妈的async和await关键字/index.html","hash":"56ee166e11bb896975318d65bf8e25fd0fe62221","modified":1540644943667},{"_id":"public/archives/index.html","hash":"490135a14c2b04430fd5ffc94c06d0551e064c9e","modified":1540644943667},{"_id":"public/archives/2018/index.html","hash":"647a3a2f31514db0f814cf11a0fbc3a792d6d374","modified":1540644943667},{"_id":"public/archives/2018/07/index.html","hash":"c80a4c6e68dfd36eedf30b5a6ec5155733e4611d","modified":1540644943667},{"_id":"public/archives/2018/09/index.html","hash":"b8ff527a8f42d66ab4284634afd774544c724c28","modified":1540644943667},{"_id":"public/tags/javascript/index.html","hash":"8429c9fce417620fd6999c16ab4db0c0cdbc6a13","modified":1540644943667},{"_id":"public/tags/编程笔记/index.html","hash":"fba706898b931dc4a6c3d3b8601820e252ea1005","modified":1540644943667},{"_id":"public/tags/前端/index.html","hash":"79edfca6ed215134f7a1c9f924507dc653645961","modified":1540644943667},{"_id":"public/tags/css/index.html","hash":"ee475189e9fd16e6fd1542050d88c672007fc8b7","modified":1540644943668},{"_id":"public/2018/09/20/变长文字及输入框的居中对其方法/index.html","hash":"4cd01b3369389cb8848b97a8b81af164c7f327a4","modified":1540644943667},{"_id":"public/tags/其他/index.html","hash":"ff8f29288620551a5aeafdf374300d69301e9a84","modified":1540644943668},{"_id":"public/2018/07/21/《javascript高级程序设计》阅读笔记/index.html","hash":"ec70aea322cd0e6205603e73655688a2e182390d","modified":1540644943668},{"_id":"public/index.html","hash":"1f59ce1840ab5a3a427266d8a3ad5f49ddda8ff4","modified":1540644943668},{"_id":"public/2018/09/13/foo/index.html","hash":"e7f2b7da71ee0768a002bbfd97aa50f5c952ea86","modified":1540644943668},{"_id":"public/2018/09/17/实验室学习路线beta版/index.html","hash":"f559fec91750a99b39c15deb1deeafe5df043766","modified":1540644943668},{"_id":"public/archives/2018/10/index.html","hash":"27770e1657c2bd15abbf26b347b518823efe26c9","modified":1540644943667},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1540644739942},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1540644739942},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1540644739942},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1540644739943},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1540644739943},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1540644739943},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1540644739943},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1540644739943},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1540644739944},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540644739944},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1540644739944},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1540644739944},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1540644739944},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540644739944},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1540644739944},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1540644739944},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1540644739944},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1540644739944},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1540644739944},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1540644739945},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1540644740827},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1540644740829},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1540644740833},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1540644740833},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1540644740833},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1540644740833},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1540644740833},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1540644740834},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1540644740834},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1540644740834},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1540644740834},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1540644740834},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1540644740834},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1540644740834},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1540644740834},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1540644740834},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1540644740835},{"_id":"public/css/main.css","hash":"c18b8a682c41acb423cd5657ab4667fc724a9633","modified":1540644740835},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1540644740835},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1540644740835},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1540644740835},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1540644740835},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1540644740835},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1540644740835},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1540644740835},{"_id":"public/tags/csapp/index.html","hash":"61fdfe14dc43136d731eee00a3932a20e19eb04e","modified":1540644943668}],"Category":[],"Data":[],"Page":[{"title":"categories","date":"2018-07-21T11:08:41.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-07-21 19:08:41\ntype: \"categories\"\n---\n","updated":"2018-07-21T11:09:13.695Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjnrg3jyg0001hovzaz5mju2w","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-07-21T11:09:20.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-07-21 19:09:20\ntype: \"tags\"\n---\n","updated":"2018-07-21T11:09:33.308Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjnrg3jyj0003hovzuh83drzz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"csapp读后小记","date":"2018-10-27T12:20:58.000Z","_content":"## 更好的理解c语言指针\n\n**指针**更加通用或者说抽象的意义是**访问所指向的一个途径**，在这种含义下任何语言都有指针，拿java来说，java的每一个变量都可以说是一个指针。但我要谈的是c语言里的指针，有着更加实际物理层面意义上的指针。对于c语言，*我们常说一个指针存储的是一个变量的**地址**，而不是这个变量实际的值*，而针对这段斜体文字，我来加以分析说明，以期待能更好帮助读者在底层上理解指针的含义。\n* 指针也是一个**变量**\n* 指针的**类型**可以看作(**实际上不是这样**)是**unsigned int**或**unsigned long**，取决于你电脑的cpu，所以指针的值是一个**无符号整数**\n* 指针的**实际(定义)类型**在底层没有意义，底层不关心指针是char还是int类型，在底层指针表现的像一个**无符号的整数**\n* 指针本身的值，也就是一个无符号的整数，存储在cpu中的**寄存器(可以理解为访问速度远超内存的内存**)\n* 对程序来说，内存就是一个范围巨大的**一维数组**\n* 指针(一个无符号的整数)就是对内存这个数组的一个**索引**(index)\n* foo = *pointer的含义是从寄存器中取出pointer变量的值，也就是指针本身的值，一个无符号整数，然后再访问内存，根据这个值找到某个变量的值，取回赋给foo变量\n* 至此可以看出，c语言的指针被描述为指向一个变量的地址，无论是再抽象意义上还是实际行为上都是非常精确的","source":"_posts/csapp读后小记.md","raw":"---\ntitle: csapp读后小记\ndate: 2018-10-27 20:20:58\ntags: \n- csapp\n- 编程笔记\n---\n## 更好的理解c语言指针\n\n**指针**更加通用或者说抽象的意义是**访问所指向的一个途径**，在这种含义下任何语言都有指针，拿java来说，java的每一个变量都可以说是一个指针。但我要谈的是c语言里的指针，有着更加实际物理层面意义上的指针。对于c语言，*我们常说一个指针存储的是一个变量的**地址**，而不是这个变量实际的值*，而针对这段斜体文字，我来加以分析说明，以期待能更好帮助读者在底层上理解指针的含义。\n* 指针也是一个**变量**\n* 指针的**类型**可以看作(**实际上不是这样**)是**unsigned int**或**unsigned long**，取决于你电脑的cpu，所以指针的值是一个**无符号整数**\n* 指针的**实际(定义)类型**在底层没有意义，底层不关心指针是char还是int类型，在底层指针表现的像一个**无符号的整数**\n* 指针本身的值，也就是一个无符号的整数，存储在cpu中的**寄存器(可以理解为访问速度远超内存的内存**)\n* 对程序来说，内存就是一个范围巨大的**一维数组**\n* 指针(一个无符号的整数)就是对内存这个数组的一个**索引**(index)\n* foo = *pointer的含义是从寄存器中取出pointer变量的值，也就是指针本身的值，一个无符号整数，然后再访问内存，根据这个值找到某个变量的值，取回赋给foo变量\n* 至此可以看出，c语言的指针被描述为指向一个变量的地址，无论是再抽象意义上还是实际行为上都是非常精确的","slug":"csapp读后小记","published":1,"updated":"2018-10-27T12:55:36.746Z","_id":"cjnrg3jya0000hovzgfkjxuzr","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"更好的理解c语言指针\"><a href=\"#更好的理解c语言指针\" class=\"headerlink\" title=\"更好的理解c语言指针\"></a>更好的理解c语言指针</h2><p><strong>指针</strong>更加通用或者说抽象的意义是<strong>访问所指向的一个途径</strong>，在这种含义下任何语言都有指针，拿java来说，java的每一个变量都可以说是一个指针。但我要谈的是c语言里的指针，有着更加实际物理层面意义上的指针。对于c语言，<em>我们常说一个指针存储的是一个变量的<strong>地址</strong>，而不是这个变量实际的值</em>，而针对这段斜体文字，我来加以分析说明，以期待能更好帮助读者在底层上理解指针的含义。</p>\n<ul>\n<li>指针也是一个<strong>变量</strong></li>\n<li>指针的<strong>类型</strong>可以看作(<strong>实际上不是这样</strong>)是<strong>unsigned int</strong>或<strong>unsigned long</strong>，取决于你电脑的cpu，所以指针的值是一个<strong>无符号整数</strong></li>\n<li>指针的<strong>实际(定义)类型</strong>在底层没有意义，底层不关心指针是char还是int类型，在底层指针表现的像一个<strong>无符号的整数</strong></li>\n<li>指针本身的值，也就是一个无符号的整数，存储在cpu中的<strong>寄存器(可以理解为访问速度远超内存的内存</strong>)</li>\n<li>对程序来说，内存就是一个范围巨大的<strong>一维数组</strong></li>\n<li>指针(一个无符号的整数)就是对内存这个数组的一个<strong>索引</strong>(index)</li>\n<li>foo = *pointer的含义是从寄存器中取出pointer变量的值，也就是指针本身的值，一个无符号整数，然后再访问内存，根据这个值找到某个变量的值，取回赋给foo变量</li>\n<li>至此可以看出，c语言的指针被描述为指向一个变量的地址，无论是再抽象意义上还是实际行为上都是非常精确的</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"更好的理解c语言指针\"><a href=\"#更好的理解c语言指针\" class=\"headerlink\" title=\"更好的理解c语言指针\"></a>更好的理解c语言指针</h2><p><strong>指针</strong>更加通用或者说抽象的意义是<strong>访问所指向的一个途径</strong>，在这种含义下任何语言都有指针，拿java来说，java的每一个变量都可以说是一个指针。但我要谈的是c语言里的指针，有着更加实际物理层面意义上的指针。对于c语言，<em>我们常说一个指针存储的是一个变量的<strong>地址</strong>，而不是这个变量实际的值</em>，而针对这段斜体文字，我来加以分析说明，以期待能更好帮助读者在底层上理解指针的含义。</p>\n<ul>\n<li>指针也是一个<strong>变量</strong></li>\n<li>指针的<strong>类型</strong>可以看作(<strong>实际上不是这样</strong>)是<strong>unsigned int</strong>或<strong>unsigned long</strong>，取决于你电脑的cpu，所以指针的值是一个<strong>无符号整数</strong></li>\n<li>指针的<strong>实际(定义)类型</strong>在底层没有意义，底层不关心指针是char还是int类型，在底层指针表现的像一个<strong>无符号的整数</strong></li>\n<li>指针本身的值，也就是一个无符号的整数，存储在cpu中的<strong>寄存器(可以理解为访问速度远超内存的内存</strong>)</li>\n<li>对程序来说，内存就是一个范围巨大的<strong>一维数组</strong></li>\n<li>指针(一个无符号的整数)就是对内存这个数组的一个<strong>索引</strong>(index)</li>\n<li>foo = *pointer的含义是从寄存器中取出pointer变量的值，也就是指针本身的值，一个无符号整数，然后再访问内存，根据这个值找到某个变量的值，取回赋给foo变量</li>\n<li>至此可以看出，c语言的指针被描述为指向一个变量的地址，无论是再抽象意义上还是实际行为上都是非常精确的</li>\n</ul>\n"},{"title":"《javascript高级程序设计》小记","date":"2018-07-21T03:41:12.000Z","_content":"本文的目的旨在记录js红宝书重要但不经常使用的知识要点。\n\n---\n\n## script元素相关\n* 对于 **带有src属性的script元素**，浏览器解析的时候会忽略script内部的js代码。也就是说只会下载执行外部脚本文件，忽略嵌入script元素内部的代码。\n* script的 **defer** 属性，如果一个script元素其defer属性被指定，脚本会被 **立即下载** 但是 **延迟** 到页面加载完成后再执行。\n* html5中script元素定义了 **async** 属性，效果类似defer属性，只适用于外部脚本文件，且不保证脚本的执行顺序遵顼其出现的顺序。\n\n```javascript\n//ps:defer和async属性的用法\n<script type=\"text/javascript\" async src=\"./foo.js\"></script>       \n//出现即为真值\n<script type=\"text/javascript\" defer src=\"./foo.js\"></script> \n//同上\n```\n\n## 文档模式\n文档模式也就是html文件第一行的\\<!DOCTYPE>。文档模式早期由IE引入，用来规范浏览器的行为(主要时解析css方面的)。分为 **混杂模式(怪异模式)** 和 **标准模式**，后来其他浏览器也引入了文档模式的特性。重点在于如果 **html文件如果开头没有声明文档类型，则默认启用混杂模式** 所以写网页时一定要带着\\<!DOCTYPE>，不然会碰到一些怪异的错误。\n\n## 带名字的匿名函数\n请思考以下代码\n```javascript\nlet test = function foo() {console.log(foo)};\nfoo(); // => 找不到变量名\n(function foo(){console.log(foo)});\nfoo(); // => 结果同上\n```\n以上两个语句都是函数表达式而非函数声明，当使用函数表达式对函数进行命名时，这个名字无法被外部访问到只存在与函数内部，与 **arguments.callee** 的作用类似。但是在strict模式下，callee属性被禁用，因此函数表达式这个特性就有用武之处了。此外，对于递归函数，采用此种方法调用自身，永远不用担心自身的函数名被覆盖或删除导致出错。\n```javascript\nfunction recurtion() {\n    recurtion();\n}\nlet foo1 = recurtion;\ndelete recurtion;\nfoo1(); //=>报错 recurtion未定义\n\nlet foo2 = function recurtion() {\n    recurtion();\n};\ndelete recurtion;\nfoo2(); // =>可以正常调用\n\n```\n\n## Object.defineProperty()\n```javascript\nlet foo = {};\n//为foo对象添加一个名为name值为1的属性\nObject.defineProperty(foo, name, {\n    configurable: false, // 此属性无法被删除，且不可以再被配置 \n    enumerable: false ,  // 此属性不可枚举, 无法用for in读到\n    writable: false ,    // 此属性变为只读，无法修改其值\n    value: \"1\",      // 所对应的值\n    //访问器属性\n    get: function() {   //读取属性时调用的函数\n        return this.name;   //this指向foo，而非本对象\n    },\n    set: function(newValue) {   //为属性赋值时调用的函数\n        this.name = newValue    //\n    }\n});\n```\nVue的双向绑定功能的基础就是此方法。此外还有个 **Object.defineProperties**方法，用于批量定义配置属性，用法类似，这就不多做介绍了。\n\n","source":"_posts/《javascript高级程序设计》阅读笔记.md","raw":"---\ntitle: 《javascript高级程序设计》小记\ndate: 2018-07-21 11:41:12\ntags: \n- javascript\n- 编程笔记\n---\n本文的目的旨在记录js红宝书重要但不经常使用的知识要点。\n\n---\n\n## script元素相关\n* 对于 **带有src属性的script元素**，浏览器解析的时候会忽略script内部的js代码。也就是说只会下载执行外部脚本文件，忽略嵌入script元素内部的代码。\n* script的 **defer** 属性，如果一个script元素其defer属性被指定，脚本会被 **立即下载** 但是 **延迟** 到页面加载完成后再执行。\n* html5中script元素定义了 **async** 属性，效果类似defer属性，只适用于外部脚本文件，且不保证脚本的执行顺序遵顼其出现的顺序。\n\n```javascript\n//ps:defer和async属性的用法\n<script type=\"text/javascript\" async src=\"./foo.js\"></script>       \n//出现即为真值\n<script type=\"text/javascript\" defer src=\"./foo.js\"></script> \n//同上\n```\n\n## 文档模式\n文档模式也就是html文件第一行的\\<!DOCTYPE>。文档模式早期由IE引入，用来规范浏览器的行为(主要时解析css方面的)。分为 **混杂模式(怪异模式)** 和 **标准模式**，后来其他浏览器也引入了文档模式的特性。重点在于如果 **html文件如果开头没有声明文档类型，则默认启用混杂模式** 所以写网页时一定要带着\\<!DOCTYPE>，不然会碰到一些怪异的错误。\n\n## 带名字的匿名函数\n请思考以下代码\n```javascript\nlet test = function foo() {console.log(foo)};\nfoo(); // => 找不到变量名\n(function foo(){console.log(foo)});\nfoo(); // => 结果同上\n```\n以上两个语句都是函数表达式而非函数声明，当使用函数表达式对函数进行命名时，这个名字无法被外部访问到只存在与函数内部，与 **arguments.callee** 的作用类似。但是在strict模式下，callee属性被禁用，因此函数表达式这个特性就有用武之处了。此外，对于递归函数，采用此种方法调用自身，永远不用担心自身的函数名被覆盖或删除导致出错。\n```javascript\nfunction recurtion() {\n    recurtion();\n}\nlet foo1 = recurtion;\ndelete recurtion;\nfoo1(); //=>报错 recurtion未定义\n\nlet foo2 = function recurtion() {\n    recurtion();\n};\ndelete recurtion;\nfoo2(); // =>可以正常调用\n\n```\n\n## Object.defineProperty()\n```javascript\nlet foo = {};\n//为foo对象添加一个名为name值为1的属性\nObject.defineProperty(foo, name, {\n    configurable: false, // 此属性无法被删除，且不可以再被配置 \n    enumerable: false ,  // 此属性不可枚举, 无法用for in读到\n    writable: false ,    // 此属性变为只读，无法修改其值\n    value: \"1\",      // 所对应的值\n    //访问器属性\n    get: function() {   //读取属性时调用的函数\n        return this.name;   //this指向foo，而非本对象\n    },\n    set: function(newValue) {   //为属性赋值时调用的函数\n        this.name = newValue    //\n    }\n});\n```\nVue的双向绑定功能的基础就是此方法。此外还有个 **Object.defineProperties**方法，用于批量定义配置属性，用法类似，这就不多做介绍了。\n\n","slug":"《javascript高级程序设计》阅读笔记","published":1,"updated":"2018-09-20T08:19:35.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnrg3jyh0002hovzgb3yngyf","content":"<p>本文的目的旨在记录js红宝书重要但不经常使用的知识要点。</p>\n<hr>\n<h2 id=\"script元素相关\"><a href=\"#script元素相关\" class=\"headerlink\" title=\"script元素相关\"></a>script元素相关</h2><ul>\n<li>对于 <strong>带有src属性的script元素</strong>，浏览器解析的时候会忽略script内部的js代码。也就是说只会下载执行外部脚本文件，忽略嵌入script元素内部的代码。</li>\n<li>script的 <strong>defer</strong> 属性，如果一个script元素其defer属性被指定，脚本会被 <strong>立即下载</strong> 但是 <strong>延迟</strong> 到页面加载完成后再执行。</li>\n<li>html5中script元素定义了 <strong>async</strong> 属性，效果类似defer属性，只适用于外部脚本文件，且不保证脚本的执行顺序遵顼其出现的顺序。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//ps:defer和async属性的用法</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> <span class=\"keyword\">async</span> src=<span class=\"string\">\"./foo.js\"</span>&gt;&lt;/script&gt;       </span><br><span class=\"line\"><span class=\"comment\">//出现即为真值</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> defer src=<span class=\"string\">\"./foo.js\"</span>&gt;&lt;/script&gt; </span><br><span class=\"line\"><span class=\"comment\">//同上</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"文档模式\"><a href=\"#文档模式\" class=\"headerlink\" title=\"文档模式\"></a>文档模式</h2><p>文档模式也就是html文件第一行的\\&lt;!DOCTYPE&gt;。文档模式早期由IE引入，用来规范浏览器的行为(主要时解析css方面的)。分为 <strong>混杂模式(怪异模式)</strong> 和 <strong>标准模式</strong>，后来其他浏览器也引入了文档模式的特性。重点在于如果 <strong>html文件如果开头没有声明文档类型，则默认启用混杂模式</strong> 所以写网页时一定要带着\\&lt;!DOCTYPE&gt;，不然会碰到一些怪异的错误。</p>\n<h2 id=\"带名字的匿名函数\"><a href=\"#带名字的匿名函数\" class=\"headerlink\" title=\"带名字的匿名函数\"></a>带名字的匿名函数</h2><p>请思考以下代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"built_in\">console</span>.log(foo)&#125;;</span><br><span class=\"line\">foo(); <span class=\"comment\">// =&gt; 找不到变量名</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(foo)&#125;);</span><br><span class=\"line\">foo(); <span class=\"comment\">// =&gt; 结果同上</span></span><br></pre></td></tr></table></figure></p>\n<p>以上两个语句都是函数表达式而非函数声明，当使用函数表达式对函数进行命名时，这个名字无法被外部访问到只存在与函数内部，与 <strong>arguments.callee</strong> 的作用类似。但是在strict模式下，callee属性被禁用，因此函数表达式这个特性就有用武之处了。此外，对于递归函数，采用此种方法调用自身，永远不用担心自身的函数名被覆盖或删除导致出错。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recurtion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    recurtion();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> foo1 = recurtion;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> recurtion;</span><br><span class=\"line\">foo1(); <span class=\"comment\">//=&gt;报错 recurtion未定义</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> foo2 = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recurtion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    recurtion();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> recurtion;</span><br><span class=\"line\">foo2(); <span class=\"comment\">// =&gt;可以正常调用</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Object-defineProperty\"><a href=\"#Object-defineProperty\" class=\"headerlink\" title=\"Object.defineProperty()\"></a>Object.defineProperty()</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> foo = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//为foo对象添加一个名为name值为1的属性</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(foo, name, &#123;</span><br><span class=\"line\">    configurable: <span class=\"literal\">false</span>, <span class=\"comment\">// 此属性无法被删除，且不可以再被配置 </span></span><br><span class=\"line\">    enumerable: <span class=\"literal\">false</span> ,  <span class=\"comment\">// 此属性不可枚举, 无法用for in读到</span></span><br><span class=\"line\">    writable: <span class=\"literal\">false</span> ,    <span class=\"comment\">// 此属性变为只读，无法修改其值</span></span><br><span class=\"line\">    value: <span class=\"string\">\"1\"</span>,      <span class=\"comment\">// 所对应的值</span></span><br><span class=\"line\">    <span class=\"comment\">//访问器属性</span></span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;   <span class=\"comment\">//读取属性时调用的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;   <span class=\"comment\">//this指向foo，而非本对象</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;   <span class=\"comment\">//为属性赋值时调用的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = newValue    <span class=\"comment\">//</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Vue的双向绑定功能的基础就是此方法。此外还有个 <strong>Object.defineProperties</strong>方法，用于批量定义配置属性，用法类似，这就不多做介绍了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文的目的旨在记录js红宝书重要但不经常使用的知识要点。</p>\n<hr>\n<h2 id=\"script元素相关\"><a href=\"#script元素相关\" class=\"headerlink\" title=\"script元素相关\"></a>script元素相关</h2><ul>\n<li>对于 <strong>带有src属性的script元素</strong>，浏览器解析的时候会忽略script内部的js代码。也就是说只会下载执行外部脚本文件，忽略嵌入script元素内部的代码。</li>\n<li>script的 <strong>defer</strong> 属性，如果一个script元素其defer属性被指定，脚本会被 <strong>立即下载</strong> 但是 <strong>延迟</strong> 到页面加载完成后再执行。</li>\n<li>html5中script元素定义了 <strong>async</strong> 属性，效果类似defer属性，只适用于外部脚本文件，且不保证脚本的执行顺序遵顼其出现的顺序。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//ps:defer和async属性的用法</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> <span class=\"keyword\">async</span> src=<span class=\"string\">\"./foo.js\"</span>&gt;&lt;/script&gt;       </span><br><span class=\"line\"><span class=\"comment\">//出现即为真值</span></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> defer src=<span class=\"string\">\"./foo.js\"</span>&gt;&lt;/script&gt; </span><br><span class=\"line\"><span class=\"comment\">//同上</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"文档模式\"><a href=\"#文档模式\" class=\"headerlink\" title=\"文档模式\"></a>文档模式</h2><p>文档模式也就是html文件第一行的\\&lt;!DOCTYPE&gt;。文档模式早期由IE引入，用来规范浏览器的行为(主要时解析css方面的)。分为 <strong>混杂模式(怪异模式)</strong> 和 <strong>标准模式</strong>，后来其他浏览器也引入了文档模式的特性。重点在于如果 <strong>html文件如果开头没有声明文档类型，则默认启用混杂模式</strong> 所以写网页时一定要带着\\&lt;!DOCTYPE&gt;，不然会碰到一些怪异的错误。</p>\n<h2 id=\"带名字的匿名函数\"><a href=\"#带名字的匿名函数\" class=\"headerlink\" title=\"带名字的匿名函数\"></a>带名字的匿名函数</h2><p>请思考以下代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> test = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"built_in\">console</span>.log(foo)&#125;;</span><br><span class=\"line\">foo(); <span class=\"comment\">// =&gt; 找不到变量名</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(foo)&#125;);</span><br><span class=\"line\">foo(); <span class=\"comment\">// =&gt; 结果同上</span></span><br></pre></td></tr></table></figure></p>\n<p>以上两个语句都是函数表达式而非函数声明，当使用函数表达式对函数进行命名时，这个名字无法被外部访问到只存在与函数内部，与 <strong>arguments.callee</strong> 的作用类似。但是在strict模式下，callee属性被禁用，因此函数表达式这个特性就有用武之处了。此外，对于递归函数，采用此种方法调用自身，永远不用担心自身的函数名被覆盖或删除导致出错。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recurtion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    recurtion();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> foo1 = recurtion;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> recurtion;</span><br><span class=\"line\">foo1(); <span class=\"comment\">//=&gt;报错 recurtion未定义</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> foo2 = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">recurtion</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    recurtion();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> recurtion;</span><br><span class=\"line\">foo2(); <span class=\"comment\">// =&gt;可以正常调用</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Object-defineProperty\"><a href=\"#Object-defineProperty\" class=\"headerlink\" title=\"Object.defineProperty()\"></a>Object.defineProperty()</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> foo = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//为foo对象添加一个名为name值为1的属性</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(foo, name, &#123;</span><br><span class=\"line\">    configurable: <span class=\"literal\">false</span>, <span class=\"comment\">// 此属性无法被删除，且不可以再被配置 </span></span><br><span class=\"line\">    enumerable: <span class=\"literal\">false</span> ,  <span class=\"comment\">// 此属性不可枚举, 无法用for in读到</span></span><br><span class=\"line\">    writable: <span class=\"literal\">false</span> ,    <span class=\"comment\">// 此属性变为只读，无法修改其值</span></span><br><span class=\"line\">    value: <span class=\"string\">\"1\"</span>,      <span class=\"comment\">// 所对应的值</span></span><br><span class=\"line\">    <span class=\"comment\">//访问器属性</span></span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;   <span class=\"comment\">//读取属性时调用的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;   <span class=\"comment\">//this指向foo，而非本对象</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;   <span class=\"comment\">//为属性赋值时调用的函数</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = newValue    <span class=\"comment\">//</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Vue的双向绑定功能的基础就是此方法。此外还有个 <strong>Object.defineProperties</strong>方法，用于批量定义配置属性，用法类似，这就不多做介绍了。</p>\n"},{"title":"变长文字和输入框的居中对其方法","date":"2018-09-20T08:18:13.000Z","_content":"\n本为旨在讨论，实现**不定长文字**与输入框搭配的居中对其方法，最终效果如图片所示。\n![实例图片](http://wx1.sinaimg.cn/large/006VuiNxgy1fvg2y3rqehj31760ib42u.jpg)\n\n## 通过使用**table**标签实现\n---\n","source":"_posts/变长文字及输入框的居中对其方法.md","raw":"---\ntitle: 变长文字和输入框的居中对其方法\ndate: 2018-09-20 16:18:13\ntags: \n- 前端\n- css\n---\n\n本为旨在讨论，实现**不定长文字**与输入框搭配的居中对其方法，最终效果如图片所示。\n![实例图片](http://wx1.sinaimg.cn/large/006VuiNxgy1fvg2y3rqehj31760ib42u.jpg)\n\n## 通过使用**table**标签实现\n---\n","slug":"变长文字及输入框的居中对其方法","published":1,"updated":"2018-09-20T08:29:15.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnrg3jyk0004hovzro8ohun8","content":"<p>本为旨在讨论，实现<strong>不定长文字</strong>与输入框搭配的居中对其方法，最终效果如图片所示。<br><img src=\"http://wx1.sinaimg.cn/large/006VuiNxgy1fvg2y3rqehj31760ib42u.jpg\" alt=\"实例图片\"></p>\n<h2 id=\"通过使用table标签实现\"><a href=\"#通过使用table标签实现\" class=\"headerlink\" title=\"通过使用table标签实现\"></a>通过使用<strong>table</strong>标签实现</h2><hr>\n","site":{"data":{}},"excerpt":"","more":"<p>本为旨在讨论，实现<strong>不定长文字</strong>与输入框搭配的居中对其方法，最终效果如图片所示。<br><img src=\"http://wx1.sinaimg.cn/large/006VuiNxgy1fvg2y3rqehj31760ib42u.jpg\" alt=\"实例图片\"></p>\n<h2 id=\"通过使用table标签实现\"><a href=\"#通过使用table标签实现\" class=\"headerlink\" title=\"通过使用table标签实现\"></a>通过使用<strong>table</strong>标签实现</h2><hr>\n"},{"title":"什么他妈的叫他妈的async和await关键字","date":"2018-10-18T11:48:44.000Z","_content":"","source":"_posts/什么他妈的叫他妈的async和await关键字.md","raw":"---\ntitle: 什么他妈的叫他妈的async和await关键字\ndate: 2018-10-18 19:48:44\ntags:\n---\n","slug":"什么他妈的叫他妈的async和await关键字","published":1,"updated":"2018-10-18T11:48:44.237Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnrg3jyo0006hovzs1ke2trq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"实验室学习路线beta版","date":"2018-09-17T11:15:08.000Z","_content":"\n## 前置\n> * 目标人群：本学习路线主要针对**完全没有编程经验**，或者仅仅**具有基础编程经验**\n> * 目的：通过完成以下其中一条学习路线你将会得到达成以下目标\n    * 掌握大部分编程语言的**共性**，可以快速上手任何新接触的语言\n    * 对编程语言在计算机体系中所占的位置有个总览的认识\n    * 打下良好的编程基础，学会使用编程来解决问题\n\n## 主要\n> 从python路线开始，学完一条学另一条，最后把最终任务完成，恭喜你就入门了。\n\n### 阶段一-学习编程语言\n---\n> 学习方式：先完成入门任务，然后学习python路线，再学习js路线，最后完成最终任务。\n\n### 1 入门任务\n\n* 阅读编程语言基础-[文章链接](http://www.yinwang.org/blog-cn/2018/04/13/csbook-chapter1) [备份](http://www.360doc.com/content/18/0429/22/1437135_749769645.shtml)-本文的目的旨在给予你一个良好的对编程语言以及其感念的理解。(不交钱也能看，至于作者要求交钱的问题，现在大家现在心有余力不及，就算了)\n\n* 阅读《如何掌握所有的程序语言》-[文章链接](https://www.douban.com/note/651108002/?type=like)-新人总是被选择什么语言困惑，这里先看看这篇文章有个大概的理解，以后学的越多理解越深。\n\n---\n\n#### 2 python3路线(python2和python3基本没有区别，不要纠结于此)\n\n* 学习python基础(直到看完教程 **64** 即可)-[课程链接](https://www.bilibili.com/video/av4050443/?p=1)-本课程目标旨在教授python的基本概念和相关特性。学完本课程后你应该达到的程度是：\n    1. 对python的常用语法有个 **熟练** 的认识和能够不出大错的 **运用**\n    2. 能够 **看懂** 别人写的代码\n    3. 能够在给予指导的情况下写出需要的代码\n<br>\n* 学习使用IDE(集成开发环境)-[Visual Studio Code](https://code.visualstudio.com/)-一个良好的IDE能够起到巨大的帮助，学到本课程请联系我，我会单独说明，因为还没有公共的课程。\n\n* 阅读《如何掌握所有的程序语言》-[课程链接](http://www.yinwang.org/blog-cn/2017/07/06/master-pl)-恭喜你，在完成以上课程以后，请再复习下这篇文章，试者结合python来理解作者想表达的意思，放心，当你学了第二门语言以后，会有更深的感悟。\n\n* 学习python的方方面面-[课程链接](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000)-现在就从头看到底吧，**注意** 尽管你已经接受了相关训练但是还会有很多地方看不懂， **不要担心** ，你看不懂是因为有其他的背景知识你还没学，以后会学的。但是你要对python本身有个熟练的理解和运用。\n\n* 该 **写** 个博客了-[课程链接](https://www.zmrenwu.com/post/2/)-学了那么长时间python该写些东西了。本教程通俗易懂，写出这个博客程序，本路线到此结束。PS:\n 1. 最终你的博客程序要完成评论功能，其后的教程章节，不要求继续学习。\n\n\n---\n\n#### 3 javascript路线\n\n* 阅读书籍《代码之髓：编程语言核心概念》-01-[下载链接]()-不要被本书的名字吓到，此书的目的就是帮你理解编程语言的的重要概念(变量，while，if，class等等)，并且通过不同的语言举例子。\n\n* 学习html和css(直到看完教程 **16** 即可)--[课程链接](https://www.bilibili.com/video/av5862916/?p=16)-基础学习\n\n* 学习javascript-01-[未定]()-未定\n\n* 更多的html，css和javascript-[教程链接](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)-本教程内容是对html，css和js的一次复习，但也是一个新的征程。本课程教授了一些计算机的常识内容，对于没接触过计算机的人来说，可能有点吃力，但是努力学习吧，**接下来我们要开始做游戏了！**\n\n* 打砖块1到4-01-[教程链接](http://space.bilibili.com/39066904/#/channel/detail?cid=21254)-请学习所给链接中视频1到视频4，并根据视频完成一个弹球游戏\n\n---\n\n#### 4 通用\n* 阅读《如何掌握所有的程序语言》-01-[课程链接](http://www.yinwang.org/blog-cn/2017/07/06/master-pl)-恭喜你，在完成以上课程以后，你已经学会了使用python和js两门语言，相信你此时会对作者想表达的含义有了更深的理解，请抱着这种理解来面对以后语言学习之路吧。\n\n\n* (**最终任务**)完成《sicp in python》-01-[阅读链接](https://legacy.gitbook.com/book/wizardforcel/sicp-py/details)-本书是神书sicp的python改写版本，虽然难度和深度降低了一些，但是其中迷人的精华部分还是值得人去努力阅读的。完成本书后的，基本上可以说是在编程语言上(谦虚的说)入了门。(本书着实有一定的难度，对于最后要求实现一个语言解释器不作必须要求，但是计算器必须完成)\n\n* (可选)sicp公开课-[视频地址](https://www.bilibili.com/video/av8515129?from=search&seid=5333695264127699869)-本课是sicp作者给惠普公司的培训视频，内容是sicp精华部分的讲解，即使时隔多年，依然是经典中的经典。(如果你看的晕头转向，请不要怀疑自己的智商，因为我第一次看也是这样，本课我看了很多遍，每次看都有新的收获。注意观看本课时请一定专注，不要开小差，否则一个走神可能就听不懂后面的内容)\n\n## 总结\n","source":"_posts/实验室学习路线beta版.md","raw":"---\ntitle: 实验室学习路线beta版\ndate: 2018-09-17 19:15:08\ntags: 其他\n---\n\n## 前置\n> * 目标人群：本学习路线主要针对**完全没有编程经验**，或者仅仅**具有基础编程经验**\n> * 目的：通过完成以下其中一条学习路线你将会得到达成以下目标\n    * 掌握大部分编程语言的**共性**，可以快速上手任何新接触的语言\n    * 对编程语言在计算机体系中所占的位置有个总览的认识\n    * 打下良好的编程基础，学会使用编程来解决问题\n\n## 主要\n> 从python路线开始，学完一条学另一条，最后把最终任务完成，恭喜你就入门了。\n\n### 阶段一-学习编程语言\n---\n> 学习方式：先完成入门任务，然后学习python路线，再学习js路线，最后完成最终任务。\n\n### 1 入门任务\n\n* 阅读编程语言基础-[文章链接](http://www.yinwang.org/blog-cn/2018/04/13/csbook-chapter1) [备份](http://www.360doc.com/content/18/0429/22/1437135_749769645.shtml)-本文的目的旨在给予你一个良好的对编程语言以及其感念的理解。(不交钱也能看，至于作者要求交钱的问题，现在大家现在心有余力不及，就算了)\n\n* 阅读《如何掌握所有的程序语言》-[文章链接](https://www.douban.com/note/651108002/?type=like)-新人总是被选择什么语言困惑，这里先看看这篇文章有个大概的理解，以后学的越多理解越深。\n\n---\n\n#### 2 python3路线(python2和python3基本没有区别，不要纠结于此)\n\n* 学习python基础(直到看完教程 **64** 即可)-[课程链接](https://www.bilibili.com/video/av4050443/?p=1)-本课程目标旨在教授python的基本概念和相关特性。学完本课程后你应该达到的程度是：\n    1. 对python的常用语法有个 **熟练** 的认识和能够不出大错的 **运用**\n    2. 能够 **看懂** 别人写的代码\n    3. 能够在给予指导的情况下写出需要的代码\n<br>\n* 学习使用IDE(集成开发环境)-[Visual Studio Code](https://code.visualstudio.com/)-一个良好的IDE能够起到巨大的帮助，学到本课程请联系我，我会单独说明，因为还没有公共的课程。\n\n* 阅读《如何掌握所有的程序语言》-[课程链接](http://www.yinwang.org/blog-cn/2017/07/06/master-pl)-恭喜你，在完成以上课程以后，请再复习下这篇文章，试者结合python来理解作者想表达的意思，放心，当你学了第二门语言以后，会有更深的感悟。\n\n* 学习python的方方面面-[课程链接](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000)-现在就从头看到底吧，**注意** 尽管你已经接受了相关训练但是还会有很多地方看不懂， **不要担心** ，你看不懂是因为有其他的背景知识你还没学，以后会学的。但是你要对python本身有个熟练的理解和运用。\n\n* 该 **写** 个博客了-[课程链接](https://www.zmrenwu.com/post/2/)-学了那么长时间python该写些东西了。本教程通俗易懂，写出这个博客程序，本路线到此结束。PS:\n 1. 最终你的博客程序要完成评论功能，其后的教程章节，不要求继续学习。\n\n\n---\n\n#### 3 javascript路线\n\n* 阅读书籍《代码之髓：编程语言核心概念》-01-[下载链接]()-不要被本书的名字吓到，此书的目的就是帮你理解编程语言的的重要概念(变量，while，if，class等等)，并且通过不同的语言举例子。\n\n* 学习html和css(直到看完教程 **16** 即可)--[课程链接](https://www.bilibili.com/video/av5862916/?p=16)-基础学习\n\n* 学习javascript-01-[未定]()-未定\n\n* 更多的html，css和javascript-[教程链接](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web)-本教程内容是对html，css和js的一次复习，但也是一个新的征程。本课程教授了一些计算机的常识内容，对于没接触过计算机的人来说，可能有点吃力，但是努力学习吧，**接下来我们要开始做游戏了！**\n\n* 打砖块1到4-01-[教程链接](http://space.bilibili.com/39066904/#/channel/detail?cid=21254)-请学习所给链接中视频1到视频4，并根据视频完成一个弹球游戏\n\n---\n\n#### 4 通用\n* 阅读《如何掌握所有的程序语言》-01-[课程链接](http://www.yinwang.org/blog-cn/2017/07/06/master-pl)-恭喜你，在完成以上课程以后，你已经学会了使用python和js两门语言，相信你此时会对作者想表达的含义有了更深的理解，请抱着这种理解来面对以后语言学习之路吧。\n\n\n* (**最终任务**)完成《sicp in python》-01-[阅读链接](https://legacy.gitbook.com/book/wizardforcel/sicp-py/details)-本书是神书sicp的python改写版本，虽然难度和深度降低了一些，但是其中迷人的精华部分还是值得人去努力阅读的。完成本书后的，基本上可以说是在编程语言上(谦虚的说)入了门。(本书着实有一定的难度，对于最后要求实现一个语言解释器不作必须要求，但是计算器必须完成)\n\n* (可选)sicp公开课-[视频地址](https://www.bilibili.com/video/av8515129?from=search&seid=5333695264127699869)-本课是sicp作者给惠普公司的培训视频，内容是sicp精华部分的讲解，即使时隔多年，依然是经典中的经典。(如果你看的晕头转向，请不要怀疑自己的智商，因为我第一次看也是这样，本课我看了很多遍，每次看都有新的收获。注意观看本课时请一定专注，不要开小差，否则一个走神可能就听不懂后面的内容)\n\n## 总结\n","slug":"实验室学习路线beta版","published":1,"updated":"2018-10-14T01:29:18.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnrg3jyp0007hovzi2sukmqs","content":"<h2 id=\"前置\"><a href=\"#前置\" class=\"headerlink\" title=\"前置\"></a>前置</h2><blockquote>\n<ul>\n<li>目标人群：本学习路线主要针对<strong>完全没有编程经验</strong>，或者仅仅<strong>具有基础编程经验</strong></li>\n<li>目的：通过完成以下其中一条学习路线你将会得到达成以下目标<ul>\n<li>掌握大部分编程语言的<strong>共性</strong>，可以快速上手任何新接触的语言</li>\n<li>对编程语言在计算机体系中所占的位置有个总览的认识</li>\n<li>打下良好的编程基础，学会使用编程来解决问题</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"主要\"><a href=\"#主要\" class=\"headerlink\" title=\"主要\"></a>主要</h2><blockquote>\n<p>从python路线开始，学完一条学另一条，最后把最终任务完成，恭喜你就入门了。</p>\n</blockquote>\n<h3 id=\"阶段一-学习编程语言\"><a href=\"#阶段一-学习编程语言\" class=\"headerlink\" title=\"阶段一-学习编程语言\"></a>阶段一-学习编程语言</h3><hr>\n<blockquote>\n<p>学习方式：先完成入门任务，然后学习python路线，再学习js路线，最后完成最终任务。</p>\n</blockquote>\n<h3 id=\"1-入门任务\"><a href=\"#1-入门任务\" class=\"headerlink\" title=\"1 入门任务\"></a>1 入门任务</h3><ul>\n<li><p>阅读编程语言基础-<a href=\"http://www.yinwang.org/blog-cn/2018/04/13/csbook-chapter1\" target=\"_blank\" rel=\"noopener\">文章链接</a> <a href=\"http://www.360doc.com/content/18/0429/22/1437135_749769645.shtml\" target=\"_blank\" rel=\"noopener\">备份</a>-本文的目的旨在给予你一个良好的对编程语言以及其感念的理解。(不交钱也能看，至于作者要求交钱的问题，现在大家现在心有余力不及，就算了)</p>\n</li>\n<li><p>阅读《如何掌握所有的程序语言》-<a href=\"https://www.douban.com/note/651108002/?type=like\" target=\"_blank\" rel=\"noopener\">文章链接</a>-新人总是被选择什么语言困惑，这里先看看这篇文章有个大概的理解，以后学的越多理解越深。</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"2-python3路线-python2和python3基本没有区别，不要纠结于此\"><a href=\"#2-python3路线-python2和python3基本没有区别，不要纠结于此\" class=\"headerlink\" title=\"2 python3路线(python2和python3基本没有区别，不要纠结于此)\"></a>2 python3路线(python2和python3基本没有区别，不要纠结于此)</h4><ul>\n<li>学习python基础(直到看完教程 <strong>64</strong> 即可)-<a href=\"https://www.bilibili.com/video/av4050443/?p=1\" target=\"_blank\" rel=\"noopener\">课程链接</a>-本课程目标旨在教授python的基本概念和相关特性。学完本课程后你应该达到的程度是：<ol>\n<li>对python的常用语法有个 <strong>熟练</strong> 的认识和能够不出大错的 <strong>运用</strong></li>\n<li>能够 <strong>看懂</strong> 别人写的代码</li>\n<li>能够在给予指导的情况下写出需要的代码<br><br></li>\n</ol>\n</li>\n<li><p>学习使用IDE(集成开发环境)-<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Visual Studio Code</a>-一个良好的IDE能够起到巨大的帮助，学到本课程请联系我，我会单独说明，因为还没有公共的课程。</p>\n</li>\n<li><p>阅读《如何掌握所有的程序语言》-<a href=\"http://www.yinwang.org/blog-cn/2017/07/06/master-pl\" target=\"_blank\" rel=\"noopener\">课程链接</a>-恭喜你，在完成以上课程以后，请再复习下这篇文章，试者结合python来理解作者想表达的意思，放心，当你学了第二门语言以后，会有更深的感悟。</p>\n</li>\n<li><p>学习python的方方面面-<a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" target=\"_blank\" rel=\"noopener\">课程链接</a>-现在就从头看到底吧，<strong>注意</strong> 尽管你已经接受了相关训练但是还会有很多地方看不懂， <strong>不要担心</strong> ，你看不懂是因为有其他的背景知识你还没学，以后会学的。但是你要对python本身有个熟练的理解和运用。</p>\n</li>\n<li><p>该 <strong>写</strong> 个博客了-<a href=\"https://www.zmrenwu.com/post/2/\" target=\"_blank\" rel=\"noopener\">课程链接</a>-学了那么长时间python该写些东西了。本教程通俗易懂，写出这个博客程序，本路线到此结束。PS:</p>\n<ol>\n<li>最终你的博客程序要完成评论功能，其后的教程章节，不要求继续学习。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h4 id=\"3-javascript路线\"><a href=\"#3-javascript路线\" class=\"headerlink\" title=\"3 javascript路线\"></a>3 javascript路线</h4><ul>\n<li><p>阅读书籍《代码之髓：编程语言核心概念》-01-<a href=\"\">下载链接</a>-不要被本书的名字吓到，此书的目的就是帮你理解编程语言的的重要概念(变量，while，if，class等等)，并且通过不同的语言举例子。</p>\n</li>\n<li><p>学习html和css(直到看完教程 <strong>16</strong> 即可)–<a href=\"https://www.bilibili.com/video/av5862916/?p=16\" target=\"_blank\" rel=\"noopener\">课程链接</a>-基础学习</p>\n</li>\n<li><p>学习javascript-01-<a href=\"\">未定</a>-未定</p>\n</li>\n<li><p>更多的html，css和javascript-<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web\" target=\"_blank\" rel=\"noopener\">教程链接</a>-本教程内容是对html，css和js的一次复习，但也是一个新的征程。本课程教授了一些计算机的常识内容，对于没接触过计算机的人来说，可能有点吃力，但是努力学习吧，<strong>接下来我们要开始做游戏了！</strong></p>\n</li>\n<li><p>打砖块1到4-01-<a href=\"http://space.bilibili.com/39066904/#/channel/detail?cid=21254\" target=\"_blank\" rel=\"noopener\">教程链接</a>-请学习所给链接中视频1到视频4，并根据视频完成一个弹球游戏</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"4-通用\"><a href=\"#4-通用\" class=\"headerlink\" title=\"4 通用\"></a>4 通用</h4><ul>\n<li>阅读《如何掌握所有的程序语言》-01-<a href=\"http://www.yinwang.org/blog-cn/2017/07/06/master-pl\" target=\"_blank\" rel=\"noopener\">课程链接</a>-恭喜你，在完成以上课程以后，你已经学会了使用python和js两门语言，相信你此时会对作者想表达的含义有了更深的理解，请抱着这种理解来面对以后语言学习之路吧。</li>\n</ul>\n<ul>\n<li><p>(<strong>最终任务</strong>)完成《sicp in python》-01-<a href=\"https://legacy.gitbook.com/book/wizardforcel/sicp-py/details\" target=\"_blank\" rel=\"noopener\">阅读链接</a>-本书是神书sicp的python改写版本，虽然难度和深度降低了一些，但是其中迷人的精华部分还是值得人去努力阅读的。完成本书后的，基本上可以说是在编程语言上(谦虚的说)入了门。(本书着实有一定的难度，对于最后要求实现一个语言解释器不作必须要求，但是计算器必须完成)</p>\n</li>\n<li><p>(可选)sicp公开课-<a href=\"https://www.bilibili.com/video/av8515129?from=search&amp;seid=5333695264127699869\" target=\"_blank\" rel=\"noopener\">视频地址</a>-本课是sicp作者给惠普公司的培训视频，内容是sicp精华部分的讲解，即使时隔多年，依然是经典中的经典。(如果你看的晕头转向，请不要怀疑自己的智商，因为我第一次看也是这样，本课我看了很多遍，每次看都有新的收获。注意观看本课时请一定专注，不要开小差，否则一个走神可能就听不懂后面的内容)</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前置\"><a href=\"#前置\" class=\"headerlink\" title=\"前置\"></a>前置</h2><blockquote>\n<ul>\n<li>目标人群：本学习路线主要针对<strong>完全没有编程经验</strong>，或者仅仅<strong>具有基础编程经验</strong></li>\n<li>目的：通过完成以下其中一条学习路线你将会得到达成以下目标<ul>\n<li>掌握大部分编程语言的<strong>共性</strong>，可以快速上手任何新接触的语言</li>\n<li>对编程语言在计算机体系中所占的位置有个总览的认识</li>\n<li>打下良好的编程基础，学会使用编程来解决问题</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"主要\"><a href=\"#主要\" class=\"headerlink\" title=\"主要\"></a>主要</h2><blockquote>\n<p>从python路线开始，学完一条学另一条，最后把最终任务完成，恭喜你就入门了。</p>\n</blockquote>\n<h3 id=\"阶段一-学习编程语言\"><a href=\"#阶段一-学习编程语言\" class=\"headerlink\" title=\"阶段一-学习编程语言\"></a>阶段一-学习编程语言</h3><hr>\n<blockquote>\n<p>学习方式：先完成入门任务，然后学习python路线，再学习js路线，最后完成最终任务。</p>\n</blockquote>\n<h3 id=\"1-入门任务\"><a href=\"#1-入门任务\" class=\"headerlink\" title=\"1 入门任务\"></a>1 入门任务</h3><ul>\n<li><p>阅读编程语言基础-<a href=\"http://www.yinwang.org/blog-cn/2018/04/13/csbook-chapter1\" target=\"_blank\" rel=\"noopener\">文章链接</a> <a href=\"http://www.360doc.com/content/18/0429/22/1437135_749769645.shtml\" target=\"_blank\" rel=\"noopener\">备份</a>-本文的目的旨在给予你一个良好的对编程语言以及其感念的理解。(不交钱也能看，至于作者要求交钱的问题，现在大家现在心有余力不及，就算了)</p>\n</li>\n<li><p>阅读《如何掌握所有的程序语言》-<a href=\"https://www.douban.com/note/651108002/?type=like\" target=\"_blank\" rel=\"noopener\">文章链接</a>-新人总是被选择什么语言困惑，这里先看看这篇文章有个大概的理解，以后学的越多理解越深。</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"2-python3路线-python2和python3基本没有区别，不要纠结于此\"><a href=\"#2-python3路线-python2和python3基本没有区别，不要纠结于此\" class=\"headerlink\" title=\"2 python3路线(python2和python3基本没有区别，不要纠结于此)\"></a>2 python3路线(python2和python3基本没有区别，不要纠结于此)</h4><ul>\n<li>学习python基础(直到看完教程 <strong>64</strong> 即可)-<a href=\"https://www.bilibili.com/video/av4050443/?p=1\" target=\"_blank\" rel=\"noopener\">课程链接</a>-本课程目标旨在教授python的基本概念和相关特性。学完本课程后你应该达到的程度是：<ol>\n<li>对python的常用语法有个 <strong>熟练</strong> 的认识和能够不出大错的 <strong>运用</strong></li>\n<li>能够 <strong>看懂</strong> 别人写的代码</li>\n<li>能够在给予指导的情况下写出需要的代码<br><br></li>\n</ol>\n</li>\n<li><p>学习使用IDE(集成开发环境)-<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Visual Studio Code</a>-一个良好的IDE能够起到巨大的帮助，学到本课程请联系我，我会单独说明，因为还没有公共的课程。</p>\n</li>\n<li><p>阅读《如何掌握所有的程序语言》-<a href=\"http://www.yinwang.org/blog-cn/2017/07/06/master-pl\" target=\"_blank\" rel=\"noopener\">课程链接</a>-恭喜你，在完成以上课程以后，请再复习下这篇文章，试者结合python来理解作者想表达的意思，放心，当你学了第二门语言以后，会有更深的感悟。</p>\n</li>\n<li><p>学习python的方方面面-<a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" target=\"_blank\" rel=\"noopener\">课程链接</a>-现在就从头看到底吧，<strong>注意</strong> 尽管你已经接受了相关训练但是还会有很多地方看不懂， <strong>不要担心</strong> ，你看不懂是因为有其他的背景知识你还没学，以后会学的。但是你要对python本身有个熟练的理解和运用。</p>\n</li>\n<li><p>该 <strong>写</strong> 个博客了-<a href=\"https://www.zmrenwu.com/post/2/\" target=\"_blank\" rel=\"noopener\">课程链接</a>-学了那么长时间python该写些东西了。本教程通俗易懂，写出这个博客程序，本路线到此结束。PS:</p>\n<ol>\n<li>最终你的博客程序要完成评论功能，其后的教程章节，不要求继续学习。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h4 id=\"3-javascript路线\"><a href=\"#3-javascript路线\" class=\"headerlink\" title=\"3 javascript路线\"></a>3 javascript路线</h4><ul>\n<li><p>阅读书籍《代码之髓：编程语言核心概念》-01-<a href=\"\">下载链接</a>-不要被本书的名字吓到，此书的目的就是帮你理解编程语言的的重要概念(变量，while，if，class等等)，并且通过不同的语言举例子。</p>\n</li>\n<li><p>学习html和css(直到看完教程 <strong>16</strong> 即可)–<a href=\"https://www.bilibili.com/video/av5862916/?p=16\" target=\"_blank\" rel=\"noopener\">课程链接</a>-基础学习</p>\n</li>\n<li><p>学习javascript-01-<a href=\"\">未定</a>-未定</p>\n</li>\n<li><p>更多的html，css和javascript-<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web\" target=\"_blank\" rel=\"noopener\">教程链接</a>-本教程内容是对html，css和js的一次复习，但也是一个新的征程。本课程教授了一些计算机的常识内容，对于没接触过计算机的人来说，可能有点吃力，但是努力学习吧，<strong>接下来我们要开始做游戏了！</strong></p>\n</li>\n<li><p>打砖块1到4-01-<a href=\"http://space.bilibili.com/39066904/#/channel/detail?cid=21254\" target=\"_blank\" rel=\"noopener\">教程链接</a>-请学习所给链接中视频1到视频4，并根据视频完成一个弹球游戏</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"4-通用\"><a href=\"#4-通用\" class=\"headerlink\" title=\"4 通用\"></a>4 通用</h4><ul>\n<li>阅读《如何掌握所有的程序语言》-01-<a href=\"http://www.yinwang.org/blog-cn/2017/07/06/master-pl\" target=\"_blank\" rel=\"noopener\">课程链接</a>-恭喜你，在完成以上课程以后，你已经学会了使用python和js两门语言，相信你此时会对作者想表达的含义有了更深的理解，请抱着这种理解来面对以后语言学习之路吧。</li>\n</ul>\n<ul>\n<li><p>(<strong>最终任务</strong>)完成《sicp in python》-01-<a href=\"https://legacy.gitbook.com/book/wizardforcel/sicp-py/details\" target=\"_blank\" rel=\"noopener\">阅读链接</a>-本书是神书sicp的python改写版本，虽然难度和深度降低了一些，但是其中迷人的精华部分还是值得人去努力阅读的。完成本书后的，基本上可以说是在编程语言上(谦虚的说)入了门。(本书着实有一定的难度，对于最后要求实现一个语言解释器不作必须要求，但是计算器必须完成)</p>\n</li>\n<li><p>(可选)sicp公开课-<a href=\"https://www.bilibili.com/video/av8515129?from=search&amp;seid=5333695264127699869\" target=\"_blank\" rel=\"noopener\">视频地址</a>-本课是sicp作者给惠普公司的培训视频，内容是sicp精华部分的讲解，即使时隔多年，依然是经典中的经典。(如果你看的晕头转向，请不要怀疑自己的智商，因为我第一次看也是这样，本课我看了很多遍，每次看都有新的收获。注意观看本课时请一定专注，不要开小差，否则一个走神可能就听不懂后面的内容)</p>\n</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2>"},{"title":"foo","date":"2018-09-13T00:46:21.000Z","_content":"\n# 链表的c语言实现\n```c\n#include<stdio.h>\n#include <iostream> \nusing namespace std;    \n#include<iomanip>\n#include<stdlib.h>\ntypedef int ElemType;\ntypedef struct LNode\n{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid InitList(LinkList &L)\n{\n\tL=(LNode*)malloc(sizeof(LNode));\n\tL->next=NULL;\n}\nvoid CreatList_L(LinkList &L,int n)\n{   \n\tLinkList p;\n\tInitList(L);\n\tfor(int i=n;i>0;--i)\n\t{\n\t\tp=(LNode*)malloc(sizeof(LNode));\n\t\tscanf(\"%d\",&p->data);\n\t    p->next=L->next;\n\t    L->next=p;\n\t}\n}\nvoid TraverseList(LinkList m)\t\n{\n\tLinkList n;\n\tn=m->next;\n    while(n!=NULL)\n\t{\n\t\tcout<<setw(2)<<n->data;\n    \tn=n->next;\n\t}\n\t    cout<<endl;\n}\nvoid Reserve(LinkList &L)\n{       \n\tint i;\n\tLinkList p=L->next->next;\n\tLinkList q;\n\tLinkList t=L->next;\n\twhile(p!=NULL)\n\t{\n\tq=p->next;\n\tp->next=L->next;\n\tL->next=p;\n\tp=q;\n\t}\n\tt->next=NULL;\n\tp=L->next;\n    for(i=0;i<8;i++,p=p->next)\n\t\tcout<<setw(2)<<p->data;\n\tcout<<endl;\n}\nint main()\n{\n\tLinkList L1;\n\tInitList(L1);\n\tcout<<\"input 8 element:\"<<endl;\n\tprintf(\"elements:\");\n\tCreatList_L(L1,8);\n    printf(\"input elements:\");\n    TraverseList(L1);\n\tprintf(\"reverse elements:\");\n    Reserve(L1);\n    \n    return 0;\n}\n\n```\n\n# 删除指定值范围的节点\n```c\n#include <stdio.h>\n#include <malloc.h>\n#define NULL 0\n\n\n\ntypedef struct Node {\n\tint value;\n\tNode* next;\n} Node;\n\nNode* makeNode(int value) {\n\tNode* node = (Node*) malloc(sizeof(Node));\n\tnode->value = value;\n\tnode->next = NULL;\n}\n\nvoid toString(Node* head) {\n\tif(head->next == NULL) {\n\t\tprintf(\"%d\\n\", head->value);\n\t\treturn;\n\t}\n\tprintf(\"%d -> \", head->value);\n\ttoString(head->next);\n}\n\nint deleteBtween(Node* head, int min, int max) {\n\tNode* deletePoint = NULL;\n\tNode* beforeDeletePoint;\n\tNode* secondDeletePoint;\n\tif(head->value > min) {\n\t\tdeletePoint = head;        // all nodes is greater than min then free all\n\t} else {\n\t\tbeforeDeletePoint = head;\n\t\twhile(beforeDeletePoint->next != NULL && beforeDeletePoint->next->value <= min) {  //find the pre-point of deletePoint\n\t\t\tbeforeDeletePoint = beforeDeletePoint->next;\n\t\t}\n\t\tprintf(\"beforeDeletePoint value: %d\\n\", beforeDeletePoint->value);\n\t\tif(beforeDeletePoint->next != NULL) {\n\t\t\t// \"beforeDeletePoint->next != NULL\" means nodes must have node needed to delete;\n\t\t\tdeletePoint = beforeDeletePoint->next; \n\t\t\tsecondDeletePoint = deletePoint;\n\t\t\twhile(secondDeletePoint->next != NULL && secondDeletePoint->next->value < max) {\n\t\t\t\tsecondDeletePoint = secondDeletePoint->next;\n\t\t\t}\n\t\t\tprintf(\"secondDeletePoint value: %d\\n\", secondDeletePoint->value);\n\t\t\tif(secondDeletePoint->next == NULL) {      //nodes after deletePoint is all smaller than max\n\t\t\t\tbeforeDeletePoint->next = NULL;  //delete all nodes after deletePoint include deletePoint\n\t\t\t} else {\n\t\t\t\tbeforeDeletePoint->next = secondDeletePoint->next;   //deleteNodes btween deletePoint and secondDeletePoint\n\t\t\t\tsecondDeletePoint->next = NULL;\n\t\t\t}\n\t\t} \n\t}\n\twhile(deletePoint != NULL) {    //free space\n\t\tNode* temp = deletePoint->next;\n\t\tfree(deletePoint);\n\t\tdeletePoint = temp;\n\t}\n\t\n}\n\nint main() {\n\tNode* nodes[100];\n\tint i;\n\tint testLimit = 20;\n\tfor(i = 0; i < testLimit; i++) {\n\t\tnodes[i] = makeNode(i);\n\t}\n\tfor(i = 0; i < testLimit - 1; i++) {\n\t\tnodes[i]->next = nodes[i + 1];\n\t}\n\ttoString(nodes[0]);\n\tdeleteBtween(nodes[0], 10, 19);\n\ttoString(nodes[0]);\n\t\n}\n```\n\n# 就地逆序单链表\n```c\n#include <stdio.h>\n#include <malloc.h>\n#define NULL 0\n\ntypedef struct Node {\n\tint value;\n\tNode* next;\n} Node;\n\nNode* makeNode(int value) {\n\tNode* node = (Node*) malloc(sizeof(Node));\n\tnode->value = value;\n\tnode->next = NULL;\n}\n\nvoid toString(Node* head) {\n\tif(head->next == NULL) {\n\t\tprintf(\"%d\\n\", head->value);\n\t\treturn;\n\t}\n\tprintf(\"%d -> \", head->value);\n\ttoString(head->next);\n}\n\nNode* reverse(Node* head) {\n\tNode* na;\n\tNode* nb;\n\tna = head;\n\tnb = na->next;\n\tna->next = NULL; //make head node point at null\n\t\n\twhile(nb != NULL) {\n\t\tNode* temp = nb->next;\n//\t\tprintf(\"debug \\n nb: %d\\n\", nb->value);\n\t\tnb->next = na;  //reverse na and nb\n\t\tna = nb;\n\t\tnb = temp;\n\t}\n\treturn na;\n}\n\n\nint main() {\n\tNode* nodes[100];\n\tint i;\n\tint testLimit = 20;\n\tfor(i = 0; i < testLimit; i++) {\n\t\tnodes[i] = makeNode(i);\n\t}\n\tfor(i = 0; i < testLimit - 1; i++) {\n\t\tnodes[i]->next = nodes[i + 1];\n\t}\n\ttoString(nodes[0]);\n\tNode* foo = reverse(nodes[0]);\n\ttoString(foo);\n\t\n}\n\n```","source":"_posts/foo.md","raw":"---\ntitle: foo\ndate: 2018-09-13 08:46:21\ntags:\n---\n\n# 链表的c语言实现\n```c\n#include<stdio.h>\n#include <iostream> \nusing namespace std;    \n#include<iomanip>\n#include<stdlib.h>\ntypedef int ElemType;\ntypedef struct LNode\n{\n\tElemType data;\n\tstruct LNode *next;\n}LNode,*LinkList;\nvoid InitList(LinkList &L)\n{\n\tL=(LNode*)malloc(sizeof(LNode));\n\tL->next=NULL;\n}\nvoid CreatList_L(LinkList &L,int n)\n{   \n\tLinkList p;\n\tInitList(L);\n\tfor(int i=n;i>0;--i)\n\t{\n\t\tp=(LNode*)malloc(sizeof(LNode));\n\t\tscanf(\"%d\",&p->data);\n\t    p->next=L->next;\n\t    L->next=p;\n\t}\n}\nvoid TraverseList(LinkList m)\t\n{\n\tLinkList n;\n\tn=m->next;\n    while(n!=NULL)\n\t{\n\t\tcout<<setw(2)<<n->data;\n    \tn=n->next;\n\t}\n\t    cout<<endl;\n}\nvoid Reserve(LinkList &L)\n{       \n\tint i;\n\tLinkList p=L->next->next;\n\tLinkList q;\n\tLinkList t=L->next;\n\twhile(p!=NULL)\n\t{\n\tq=p->next;\n\tp->next=L->next;\n\tL->next=p;\n\tp=q;\n\t}\n\tt->next=NULL;\n\tp=L->next;\n    for(i=0;i<8;i++,p=p->next)\n\t\tcout<<setw(2)<<p->data;\n\tcout<<endl;\n}\nint main()\n{\n\tLinkList L1;\n\tInitList(L1);\n\tcout<<\"input 8 element:\"<<endl;\n\tprintf(\"elements:\");\n\tCreatList_L(L1,8);\n    printf(\"input elements:\");\n    TraverseList(L1);\n\tprintf(\"reverse elements:\");\n    Reserve(L1);\n    \n    return 0;\n}\n\n```\n\n# 删除指定值范围的节点\n```c\n#include <stdio.h>\n#include <malloc.h>\n#define NULL 0\n\n\n\ntypedef struct Node {\n\tint value;\n\tNode* next;\n} Node;\n\nNode* makeNode(int value) {\n\tNode* node = (Node*) malloc(sizeof(Node));\n\tnode->value = value;\n\tnode->next = NULL;\n}\n\nvoid toString(Node* head) {\n\tif(head->next == NULL) {\n\t\tprintf(\"%d\\n\", head->value);\n\t\treturn;\n\t}\n\tprintf(\"%d -> \", head->value);\n\ttoString(head->next);\n}\n\nint deleteBtween(Node* head, int min, int max) {\n\tNode* deletePoint = NULL;\n\tNode* beforeDeletePoint;\n\tNode* secondDeletePoint;\n\tif(head->value > min) {\n\t\tdeletePoint = head;        // all nodes is greater than min then free all\n\t} else {\n\t\tbeforeDeletePoint = head;\n\t\twhile(beforeDeletePoint->next != NULL && beforeDeletePoint->next->value <= min) {  //find the pre-point of deletePoint\n\t\t\tbeforeDeletePoint = beforeDeletePoint->next;\n\t\t}\n\t\tprintf(\"beforeDeletePoint value: %d\\n\", beforeDeletePoint->value);\n\t\tif(beforeDeletePoint->next != NULL) {\n\t\t\t// \"beforeDeletePoint->next != NULL\" means nodes must have node needed to delete;\n\t\t\tdeletePoint = beforeDeletePoint->next; \n\t\t\tsecondDeletePoint = deletePoint;\n\t\t\twhile(secondDeletePoint->next != NULL && secondDeletePoint->next->value < max) {\n\t\t\t\tsecondDeletePoint = secondDeletePoint->next;\n\t\t\t}\n\t\t\tprintf(\"secondDeletePoint value: %d\\n\", secondDeletePoint->value);\n\t\t\tif(secondDeletePoint->next == NULL) {      //nodes after deletePoint is all smaller than max\n\t\t\t\tbeforeDeletePoint->next = NULL;  //delete all nodes after deletePoint include deletePoint\n\t\t\t} else {\n\t\t\t\tbeforeDeletePoint->next = secondDeletePoint->next;   //deleteNodes btween deletePoint and secondDeletePoint\n\t\t\t\tsecondDeletePoint->next = NULL;\n\t\t\t}\n\t\t} \n\t}\n\twhile(deletePoint != NULL) {    //free space\n\t\tNode* temp = deletePoint->next;\n\t\tfree(deletePoint);\n\t\tdeletePoint = temp;\n\t}\n\t\n}\n\nint main() {\n\tNode* nodes[100];\n\tint i;\n\tint testLimit = 20;\n\tfor(i = 0; i < testLimit; i++) {\n\t\tnodes[i] = makeNode(i);\n\t}\n\tfor(i = 0; i < testLimit - 1; i++) {\n\t\tnodes[i]->next = nodes[i + 1];\n\t}\n\ttoString(nodes[0]);\n\tdeleteBtween(nodes[0], 10, 19);\n\ttoString(nodes[0]);\n\t\n}\n```\n\n# 就地逆序单链表\n```c\n#include <stdio.h>\n#include <malloc.h>\n#define NULL 0\n\ntypedef struct Node {\n\tint value;\n\tNode* next;\n} Node;\n\nNode* makeNode(int value) {\n\tNode* node = (Node*) malloc(sizeof(Node));\n\tnode->value = value;\n\tnode->next = NULL;\n}\n\nvoid toString(Node* head) {\n\tif(head->next == NULL) {\n\t\tprintf(\"%d\\n\", head->value);\n\t\treturn;\n\t}\n\tprintf(\"%d -> \", head->value);\n\ttoString(head->next);\n}\n\nNode* reverse(Node* head) {\n\tNode* na;\n\tNode* nb;\n\tna = head;\n\tnb = na->next;\n\tna->next = NULL; //make head node point at null\n\t\n\twhile(nb != NULL) {\n\t\tNode* temp = nb->next;\n//\t\tprintf(\"debug \\n nb: %d\\n\", nb->value);\n\t\tnb->next = na;  //reverse na and nb\n\t\tna = nb;\n\t\tnb = temp;\n\t}\n\treturn na;\n}\n\n\nint main() {\n\tNode* nodes[100];\n\tint i;\n\tint testLimit = 20;\n\tfor(i = 0; i < testLimit; i++) {\n\t\tnodes[i] = makeNode(i);\n\t}\n\tfor(i = 0; i < testLimit - 1; i++) {\n\t\tnodes[i]->next = nodes[i + 1];\n\t}\n\ttoString(nodes[0]);\n\tNode* foo = reverse(nodes[0]);\n\ttoString(foo);\n\t\n}\n\n```","slug":"foo","published":1,"updated":"2018-10-11T00:27:40.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnrg3jz7000hhovzz8974uw5","content":"<h1 id=\"链表的c语言实现\"><a href=\"#链表的c语言实现\" class=\"headerlink\" title=\"链表的c语言实现\"></a>链表的c语言实现</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;    </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;LNode,*LinkList;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitList</span><span class=\"params\">(LinkList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tL=(LNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(LNode));</span><br><span class=\"line\">\tL-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatList_L</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\">\tLinkList p;</span><br><span class=\"line\">\tInitList(L);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp=(LNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(LNode));</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;data);</span><br><span class=\"line\">\t    p-&gt;next=L-&gt;next;</span><br><span class=\"line\">\t    L-&gt;next=p;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TraverseList</span><span class=\"params\">(LinkList m)</span>\t</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkList n;</span><br><span class=\"line\">\tn=m-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">2</span>)&lt;&lt;n-&gt;data;</span><br><span class=\"line\">    \tn=n-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reserve</span><span class=\"params\">(LinkList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;       </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\tLinkList p=L-&gt;next-&gt;next;</span><br><span class=\"line\">\tLinkList q;</span><br><span class=\"line\">\tLinkList t=L-&gt;next;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tq=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=L-&gt;next;</span><br><span class=\"line\">\tL-&gt;next=p;</span><br><span class=\"line\">\tp=q;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tt-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tp=L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++,p=p-&gt;next)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">2</span>)&lt;&lt;p-&gt;data;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkList L1;</span><br><span class=\"line\">\tInitList(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"input 8 element:\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"elements:\"</span>);</span><br><span class=\"line\">\tCreatList_L(L1,<span class=\"number\">8</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"input elements:\"</span>);</span><br><span class=\"line\">    TraverseList(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"reverse elements:\"</span>);</span><br><span class=\"line\">    Reserve(L1);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除指定值范围的节点\"><a href=\"#删除指定值范围的节点\" class=\"headerlink\" title=\"删除指定值范围的节点\"></a>删除指定值范围的节点</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NULL 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> value;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125; Node;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">makeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\tNode* node = (Node*) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">\tnode-&gt;value = value;</span><br><span class=\"line\">\tnode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">toString</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, head-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt; \"</span>, head-&gt;value);</span><br><span class=\"line\">\ttoString(head-&gt;next);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">deleteBtween</span><span class=\"params\">(Node* head, <span class=\"keyword\">int</span> min, <span class=\"keyword\">int</span> max)</span> </span>&#123;</span><br><span class=\"line\">\tNode* deletePoint = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tNode* beforeDeletePoint;</span><br><span class=\"line\">\tNode* secondDeletePoint;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;value &gt; min) &#123;</span><br><span class=\"line\">\t\tdeletePoint = head;        <span class=\"comment\">// all nodes is greater than min then free all</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tbeforeDeletePoint = head;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(beforeDeletePoint-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; beforeDeletePoint-&gt;next-&gt;value &lt;= min) &#123;  <span class=\"comment\">//find the pre-point of deletePoint</span></span><br><span class=\"line\">\t\t\tbeforeDeletePoint = beforeDeletePoint-&gt;next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"beforeDeletePoint value: %d\\n\"</span>, beforeDeletePoint-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(beforeDeletePoint-&gt;next != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// \"beforeDeletePoint-&gt;next != NULL\" means nodes must have node needed to delete;</span></span><br><span class=\"line\">\t\t\tdeletePoint = beforeDeletePoint-&gt;next; </span><br><span class=\"line\">\t\t\tsecondDeletePoint = deletePoint;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(secondDeletePoint-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; secondDeletePoint-&gt;next-&gt;value &lt; max) &#123;</span><br><span class=\"line\">\t\t\t\tsecondDeletePoint = secondDeletePoint-&gt;next;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"secondDeletePoint value: %d\\n\"</span>, secondDeletePoint-&gt;value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(secondDeletePoint-&gt;next == <span class=\"literal\">NULL</span>) &#123;      <span class=\"comment\">//nodes after deletePoint is all smaller than max</span></span><br><span class=\"line\">\t\t\t\tbeforeDeletePoint-&gt;next = <span class=\"literal\">NULL</span>;  <span class=\"comment\">//delete all nodes after deletePoint include deletePoint</span></span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tbeforeDeletePoint-&gt;next = secondDeletePoint-&gt;next;   <span class=\"comment\">//deleteNodes btween deletePoint and secondDeletePoint</span></span><br><span class=\"line\">\t\t\t\tsecondDeletePoint-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(deletePoint != <span class=\"literal\">NULL</span>) &#123;    <span class=\"comment\">//free space</span></span><br><span class=\"line\">\t\tNode* temp = deletePoint-&gt;next;</span><br><span class=\"line\">\t\t<span class=\"built_in\">free</span>(deletePoint);</span><br><span class=\"line\">\t\tdeletePoint = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tNode* nodes[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> testLimit = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i] = makeNode(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i]-&gt;next = nodes[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tdeleteBtween(nodes[<span class=\"number\">0</span>], <span class=\"number\">10</span>, <span class=\"number\">19</span>);</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"就地逆序单链表\"><a href=\"#就地逆序单链表\" class=\"headerlink\" title=\"就地逆序单链表\"></a>就地逆序单链表</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NULL 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> value;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125; Node;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">makeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\tNode* node = (Node*) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">\tnode-&gt;value = value;</span><br><span class=\"line\">\tnode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">toString</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, head-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt; \"</span>, head-&gt;value);</span><br><span class=\"line\">\ttoString(head-&gt;next);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">reverse</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\tNode* na;</span><br><span class=\"line\">\tNode* nb;</span><br><span class=\"line\">\tna = head;</span><br><span class=\"line\">\tnb = na-&gt;next;</span><br><span class=\"line\">\tna-&gt;next = <span class=\"literal\">NULL</span>; <span class=\"comment\">//make head node point at null</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(nb != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\tNode* temp = nb-&gt;next;</span><br><span class=\"line\"><span class=\"comment\">//\t\tprintf(\"debug \\n nb: %d\\n\", nb-&gt;value);</span></span><br><span class=\"line\">\t\tnb-&gt;next = na;  <span class=\"comment\">//reverse na and nb</span></span><br><span class=\"line\">\t\tna = nb;</span><br><span class=\"line\">\t\tnb = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> na;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tNode* nodes[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> testLimit = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i] = makeNode(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i]-&gt;next = nodes[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tNode* foo = reverse(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\ttoString(foo);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"链表的c语言实现\"><a href=\"#链表的c语言实现\" class=\"headerlink\" title=\"链表的c语言实现\"></a>链表的c语言实现</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt; </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;    </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElemType;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElemType data;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">LNode</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125;LNode,*LinkList;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitList</span><span class=\"params\">(LinkList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tL=(LNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(LNode));</span><br><span class=\"line\">\tL-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatList_L</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;   </span><br><span class=\"line\">\tLinkList p;</span><br><span class=\"line\">\tInitList(L);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">0</span>;--i)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp=(LNode*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(LNode));</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;p-&gt;data);</span><br><span class=\"line\">\t    p-&gt;next=L-&gt;next;</span><br><span class=\"line\">\t    L-&gt;next=p;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">TraverseList</span><span class=\"params\">(LinkList m)</span>\t</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkList n;</span><br><span class=\"line\">\tn=m-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">2</span>)&lt;&lt;n-&gt;data;</span><br><span class=\"line\">    \tn=n-&gt;next;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reserve</span><span class=\"params\">(LinkList &amp;L)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;       </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\tLinkList p=L-&gt;next-&gt;next;</span><br><span class=\"line\">\tLinkList q;</span><br><span class=\"line\">\tLinkList t=L-&gt;next;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(p!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tq=p-&gt;next;</span><br><span class=\"line\">\tp-&gt;next=L-&gt;next;</span><br><span class=\"line\">\tL-&gt;next=p;</span><br><span class=\"line\">\tp=q;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tt-&gt;next=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tp=L-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++,p=p-&gt;next)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;setw(<span class=\"number\">2</span>)&lt;&lt;p-&gt;data;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tLinkList L1;</span><br><span class=\"line\">\tInitList(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"input 8 element:\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"elements:\"</span>);</span><br><span class=\"line\">\tCreatList_L(L1,<span class=\"number\">8</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"input elements:\"</span>);</span><br><span class=\"line\">    TraverseList(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"reverse elements:\"</span>);</span><br><span class=\"line\">    Reserve(L1);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"删除指定值范围的节点\"><a href=\"#删除指定值范围的节点\" class=\"headerlink\" title=\"删除指定值范围的节点\"></a>删除指定值范围的节点</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NULL 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> value;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125; Node;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">makeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\tNode* node = (Node*) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">\tnode-&gt;value = value;</span><br><span class=\"line\">\tnode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">toString</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, head-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt; \"</span>, head-&gt;value);</span><br><span class=\"line\">\ttoString(head-&gt;next);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">deleteBtween</span><span class=\"params\">(Node* head, <span class=\"keyword\">int</span> min, <span class=\"keyword\">int</span> max)</span> </span>&#123;</span><br><span class=\"line\">\tNode* deletePoint = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tNode* beforeDeletePoint;</span><br><span class=\"line\">\tNode* secondDeletePoint;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;value &gt; min) &#123;</span><br><span class=\"line\">\t\tdeletePoint = head;        <span class=\"comment\">// all nodes is greater than min then free all</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tbeforeDeletePoint = head;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(beforeDeletePoint-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; beforeDeletePoint-&gt;next-&gt;value &lt;= min) &#123;  <span class=\"comment\">//find the pre-point of deletePoint</span></span><br><span class=\"line\">\t\t\tbeforeDeletePoint = beforeDeletePoint-&gt;next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"beforeDeletePoint value: %d\\n\"</span>, beforeDeletePoint-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(beforeDeletePoint-&gt;next != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// \"beforeDeletePoint-&gt;next != NULL\" means nodes must have node needed to delete;</span></span><br><span class=\"line\">\t\t\tdeletePoint = beforeDeletePoint-&gt;next; </span><br><span class=\"line\">\t\t\tsecondDeletePoint = deletePoint;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(secondDeletePoint-&gt;next != <span class=\"literal\">NULL</span> &amp;&amp; secondDeletePoint-&gt;next-&gt;value &lt; max) &#123;</span><br><span class=\"line\">\t\t\t\tsecondDeletePoint = secondDeletePoint-&gt;next;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"secondDeletePoint value: %d\\n\"</span>, secondDeletePoint-&gt;value);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(secondDeletePoint-&gt;next == <span class=\"literal\">NULL</span>) &#123;      <span class=\"comment\">//nodes after deletePoint is all smaller than max</span></span><br><span class=\"line\">\t\t\t\tbeforeDeletePoint-&gt;next = <span class=\"literal\">NULL</span>;  <span class=\"comment\">//delete all nodes after deletePoint include deletePoint</span></span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tbeforeDeletePoint-&gt;next = secondDeletePoint-&gt;next;   <span class=\"comment\">//deleteNodes btween deletePoint and secondDeletePoint</span></span><br><span class=\"line\">\t\t\t\tsecondDeletePoint-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(deletePoint != <span class=\"literal\">NULL</span>) &#123;    <span class=\"comment\">//free space</span></span><br><span class=\"line\">\t\tNode* temp = deletePoint-&gt;next;</span><br><span class=\"line\">\t\t<span class=\"built_in\">free</span>(deletePoint);</span><br><span class=\"line\">\t\tdeletePoint = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tNode* nodes[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> testLimit = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i] = makeNode(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i]-&gt;next = nodes[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tdeleteBtween(nodes[<span class=\"number\">0</span>], <span class=\"number\">10</span>, <span class=\"number\">19</span>);</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"就地逆序单链表\"><a href=\"#就地逆序单链表\" class=\"headerlink\" title=\"就地逆序单链表\"></a>就地逆序单链表</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NULL 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> value;</span><br><span class=\"line\">\tNode* next;</span><br><span class=\"line\">&#125; Node;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">makeNode</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\tNode* node = (Node*) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</span><br><span class=\"line\">\tnode-&gt;value = value;</span><br><span class=\"line\">\tnode-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">toString</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(head-&gt;next == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, head-&gt;value);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d -&gt; \"</span>, head-&gt;value);</span><br><span class=\"line\">\ttoString(head-&gt;next);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">reverse</span><span class=\"params\">(Node* head)</span> </span>&#123;</span><br><span class=\"line\">\tNode* na;</span><br><span class=\"line\">\tNode* nb;</span><br><span class=\"line\">\tna = head;</span><br><span class=\"line\">\tnb = na-&gt;next;</span><br><span class=\"line\">\tna-&gt;next = <span class=\"literal\">NULL</span>; <span class=\"comment\">//make head node point at null</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(nb != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\tNode* temp = nb-&gt;next;</span><br><span class=\"line\"><span class=\"comment\">//\t\tprintf(\"debug \\n nb: %d\\n\", nb-&gt;value);</span></span><br><span class=\"line\">\t\tnb-&gt;next = na;  <span class=\"comment\">//reverse na and nb</span></span><br><span class=\"line\">\t\tna = nb;</span><br><span class=\"line\">\t\tnb = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> na;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tNode* nodes[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> testLimit = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i] = makeNode(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; testLimit - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">\t\tnodes[i]-&gt;next = nodes[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttoString(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\tNode* foo = reverse(nodes[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\ttoString(foo);</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjnrg3jyh0002hovzgb3yngyf","tag_id":"cjnrg3jym0005hovzkeon205m","_id":"cjnrg3jyt000ahovztrlm2gec"},{"post_id":"cjnrg3jyh0002hovzgb3yngyf","tag_id":"cjnrg3jyq0008hovzo3boavcl","_id":"cjnrg3jyu000bhovzpvii7z75"},{"post_id":"cjnrg3jyk0004hovzro8ohun8","tag_id":"cjnrg3jys0009hovzcmnobpyp","_id":"cjnrg3jyw000ehovzfp95pp79"},{"post_id":"cjnrg3jyk0004hovzro8ohun8","tag_id":"cjnrg3jyu000chovz9f5fs8v6","_id":"cjnrg3jyw000fhovze6pzy5pz"},{"post_id":"cjnrg3jyp0007hovzi2sukmqs","tag_id":"cjnrg3jyv000dhovzhn7eg3ho","_id":"cjnrg3jyx000ghovz0brnrvgl"},{"post_id":"cjnrg3jya0000hovzgfkjxuzr","tag_id":"cjnrg7xgy0000y8vz5g0844ji","_id":"cjnrg7xh90001y8vzx8fyqilj"},{"post_id":"cjnrg3jya0000hovzgfkjxuzr","tag_id":"cjnrg3jyq0008hovzo3boavcl","_id":"cjnrg7xh90002y8vz53he3xy1"}],"Tag":[{"name":"javascript","_id":"cjnrg3jym0005hovzkeon205m"},{"name":"编程笔记","_id":"cjnrg3jyq0008hovzo3boavcl"},{"name":"前端","_id":"cjnrg3jys0009hovzcmnobpyp"},{"name":"css","_id":"cjnrg3jyu000chovz9f5fs8v6"},{"name":"其他","_id":"cjnrg3jyv000dhovzhn7eg3ho"},{"name":"csapp","_id":"cjnrg7xgy0000y8vz5g0844ji"}]}}